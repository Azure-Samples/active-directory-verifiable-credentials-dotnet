{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "webAppName": {
      "type": "string",
      "defaultValue": "<App Name>",
      "minLength": 2,
      "metadata": {
        "description": "app name."
      }
    },
    "repoURL": {
      "type": "string",
      "metadata": {
        "description": "Github repo URL"
      },
      "defaultValue": "https://github.com/Azure-Samples/active-directory-verifiable-credentials-dotnet.git"
    },
    "branch": {
      "type": "string",
      "metadata": {
        "description": "Github repo branch"
      },
      "defaultValue": "main"
    },
    "Project": {
      "type": "string",
      "metadata": {
        "description": "Github repo subfolder"
      },
      "defaultValue": "1-asp-net-core-api-idtokenhint"
    },
    "TenantId": {
      "type": "string",
      "metadata": {
        "description": "Entra ID Tenant id"
      },
      "defaultValue": "<Tenant id>"
    },
    "ClientId": {
      "type": "string",
      "metadata": {
        "description": "app's ClientId"
      },
      "defaultValue": "<ClientId>"
    },
    "ClientSecret": {
      "type": "string",
      "metadata": {
        "description": "app's ClientSecret"
      },
      "defaultValue": "<ClientSecret>"
    },
    "DidAuthority": {
      "type": "string",
      "metadata": {
        "description": "DidAuthority"
      },
      "defaultValue": "<DidAuthority>"
    },
    "CredentialType": {
      "type": "string",
      "metadata": {
        "description": "CredentialType"
      },
      "defaultValue": "VerifiedCredentialExpert"
    },
    "CredentialManifest": {
      "type": "string",
      "metadata": {
        "description": "CredentialManifest"
      },
      "defaultValue": "<ManifestURL>"
    },
    "PhotoClaimName": {
      "type": "string",
      "metadata": {
        "description": "claim name for photo - if you are using FaceCheck during presentation. Otherwise leave this field blank"
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "appServicePlanPortalName": "[concat(parameters('webAppName'), '-plan')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('appServicePlanPortalName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "B1",
        "tier": "Basic",
        "size": "B1",
        "family": "B",
        "capacity": 1
      },
      "kind": "app",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },

    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-09-01",
      "name": "[parameters('webAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "app",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
      ],
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('webAppName'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('webAppName'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]",
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "vnetRouteAllEnabled": false,
        "vnetImagePullEnabled": false,
        "vnetContentShareEnabled": false,

        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "clientCertMode": "Required",
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": false,
        "redundancyMode": "None",
        "storageAccountRequired": false,
        "keyVaultReferenceIdentity": "SystemAssigned",

        "siteConfig": {
          "numberOfWorkers": 1,
          "acrUseManagedIdentityCreds": false,
          "alwaysOn": false,
          "http20Enabled": false,
          "functionAppScaleLimit": 0,
          "minimumElasticInstanceCount": 0,
          "appSettings": [
            {
              "name": "SCM_COMMAND_IDLE_TIMEOUT",
              "value": "600"
            },
            {
              "name": "PROJECT",
              "value": "[parameters('Project')]"
            },
            {
              "name": "VerifiedID__TenantId",
              "value": "[parameters('TenantId')]"
            },
            {
              "name": "VerifiedID__ClientId",
              "value": "[parameters('ClientId')]"
            },
            {
              "name": "VerifiedID__ClientSecret",
              "value": "[parameters('ClientSecret')]"
            },
            {
              "name": "VerifiedID__DidAuthority",
              "value": "[parameters('DidAuthority')]"
            },
            {
              "name": "VerifiedID__CredentialType",
              "value": "[parameters('CredentialType')]"
            },
            {
              "name": "verifiedID__CredentialManifest",
              "value": "[parameters('CredentialManifest')]"
            },
            {
              "name": "VerifiedID__PhotoClaimName",
              "value": "[parameters('PhotoClaimName')]"
            }
          ]
        }
      },

      "resources": [
        {
          "type": "sourcecontrols",
          "apiVersion": "2018-02-01",
          "name": "web",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
          ],
          "properties": {
            "repoUrl": "[parameters('repoURL')]",
            "branch": "[parameters('branch')]",
            "isManualIntegration": true
          }
        }
      ]

    },

    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "apiVersion": "2022-09-01",
      "name": "[concat(parameters('webAppName'), '/', parameters('webAppName'), '.azurewebsites.net')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
      ],
      "properties": {
        "siteName": "[parameters('webAppName')]",
        "hostNameType": "Verified"
      }
    },

    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-09-01",
      "name": "[concat(parameters('webAppName'), '/web')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php",
          "hostingstart.html"
        ],
        "netFrameworkVersion": "v6.0",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "httpLoggingEnabled": true,
        "acrUseManagedIdentityCreds": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "[concat('$', parameters('webAppName'))]",
        "scmType": "",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "managedPipelineMode": "Integrated",
        "appCommandLine": "",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false
          }
        ],
        "loadBalancing": "LeastRequests",
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetRouteAllEnabled": false,
        "vnetPrivatePortsCount": 0,
        "publicNetworkAccess": "Enabled",
        "localMySqlEnabled": false,
        "ipSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 2147483647,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictions": [
          {
            "ipAddress": "Any",
            "action": "Allow",
            "priority": 2147483647,
            "name": "Allow all",
            "description": "Allow all access"
          }
        ],
        "scmIpSecurityRestrictionsUseMain": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "scmMinTlsVersion": "1.2",
        "ftpsState": "FtpsOnly",
        "preWarmedInstanceCount": 0,
        "elasticWebAppScaleLimit": 0,
        "functionsRuntimeScaleMonitoringEnabled": false,
        "minimumElasticInstanceCount": 0,
        "azureStorageAccounts": {}
      }
    }

  ]
}
