{
  "includeQRCode": false,
  "callback": {
    //In this sample code we will overwrite the callback and use the HOSTNAME dynamicall
    //make sure you use ngrok or something like that when running on a local devbox. 
    //The MS AAD VC Request service needs to be able to reach the callback URI
    "url": "https://YOURPUBLICREACHABLEHOSTNAME/api/verifier/presentationCallback",
    "state": "STATEWILLBESETINCODE",
    "headers": {
      "api-key": "OPTIONAL API-KEY for VERIFIER CALLBACK API"
    }
  },
  //The Authority is the DID from your MS AAD Verifiable Credential service, you can copy this from the VC page in azure portal
  "authority": "did:ion: THIS IS YOUR DID FROM THE VC PAGE IN AZURE PORTAL WHICH IS SET IN THE SAMPLE BY COPYING THE VALUE FROM APPSETTINGS.JSON   ",
  "registration": {
    "clientName": "Veriable Credential Expert Verifier"
  },
  "presentation": {
    "includeReceipt": true,
    //You can request multiple verifiable credentials at once that's whty the requestCredentials is an array
    "requestedCredentials": [
      {
        "type": "VerifiedCredentialExpert",
        "manifest": "CREDENTIAL URL COPIED FROM THE VC PORTAL, IN THIS SAMPLE CODE ITS COPIED FROM APPSETTINGS.JSON",
        "purpose": "So we can see that you a veriable credentials expert",
        //You can trust multiple issuers who might be issuing the same credential type (for example certifications or diplomas)
        //You need to specify at least 1 trusted issuer DID, for this sample code we copy the IssuerAuthority from appsettings to the request
        "acceptedIssuers": [ "did:ion: copied from your VC portal in this sample the code copies it from APPSETTINGS.JSON"]
      }

    ]
  }
}